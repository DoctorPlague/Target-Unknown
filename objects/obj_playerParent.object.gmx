<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set values for gravity
gravity_direction = 270                        //Set direction of gravity to down

if (!place_meeting(x,y+2,obj_floor))           //Check if player is in the air
{
    gravity = 1;                               //Set gravity to 1
}  
else                                           //If not in the air
{
    gravity = 0;                               //Set gravity to 0
}

//Movement
//Left
if keyboard_check(key_left) = true
{
    image_xscale = -1;                         //Make the sprite look left
    faceDirection = 180;                       //Write a variable for weapon direction
    if ((!place_meeting(x-speed,y,obj_floor))) //If not colliding with the side of
    {                                          //the environment, move
        hspeed = -5;               
    }
    else                                       //If colliding with the side of the
    {                                          //environment, don't move
        hspeed = 0
    }
}
else
{
    if faceDirection = 180                     //I can't remember what this was for
    {                                          //but it needs to be here
        if ((place_meeting(x-speed,y,obj_floor)))
        {
            hspeed = 0
        }
    }
}

//Right
if keyboard_check(key_right) = true
{
    image_xscale = 1;                          //Make the sprite look left  
    faceDirection = 0;                         //Write a variable for weapon direction
    if ((!place_meeting(x+speed,y,obj_floor))) //If not colliding with the side of
    {                                          //the environment, move
        hspeed = 5;
    }
    else                                       //If colliding with the side of the
    {                                          //environment, don't move
        hspeed = 0;
    }
}
else
{
    if faceDirection = 0                       //I can't remember what this was for
    {                                          //but it needs to be here
        if ((place_meeting(x+speed,y,obj_floor)))
        {
            hspeed = 0
        }
    }
}

if (keyboard_check(key_left) = false) &amp;&amp; (keyboard_check(key_right) = false)
{
    if (place_meeting(x,y+2,obj_floor))        //Stop moving if neither keys are pressed
    {                                          //and the player is on the ground
        speed = 0;
    }
}

//Jump
if keyboard_check_pressed(jump) = true         
{
    if (place_meeting(x,y+2,obj_floor))        //If the player is on the ground
    {                                          
        vspeed = -15;                          //Set upwards vspeed to 20
    }
    if canDJ = 1                               //If player can double jump
    {
        if (!place_meeting(x,y+2,obj_floor))   //And they are not touching the ground
        {        
            vspeed = -20;                      //Set upwards vspeed of 20
            canDJ = 0                          //Set double jump to 0
        }
    }
}

//Reset double jump
if (place_meeting(x,y+2,obj_floor))            //If player is touching the floor
{
    canDJ = 1;                                 //Set double jump to 1
}

//Timer for shot delay
if shotDelay &lt; 40
{
    shotDelay += 1                             //Increase value of shot delay by 1 per
}                                              //tick (60 ticks per second)

//Fire revolver
if keyboard_check_pressed(vk_space) = true
{
    if shotDelay &gt; 30 &amp;&amp; ammo &gt; 0              //Check if fire is possible
    {
        if faceDirection = 0                   //Determine direction of bullet travel
        {
            with instance_create(x+32,y+32,obj_bullet)
            {
                speed = 10                     //Set speed of bullet to 10
                image_xscale = 1               //Set direction of sprite to the right
            }
        }
        if faceDirection = 180                 //Determine direction of bullet travel
        {
            with instance_create(x-32,y+32,obj_bullet)
            {
                speed = -10                    //Set speed of bullet to 10
                image_xscale = -1              //Set direction of sprite to the left
            }
        }
        shotDelay = 0                          //Set delay to 0
        ammo -= 1                              //Reduce ammo count by 1
    }
    if ammo &lt; 1                                //If out of ammo
    {
        reloading = 1;                         //Start reloading the gun
    }
}

//Reload timer
if reloading = 1                               //Check for variable 'reloading'
{
    reloadTimer += 1                           //Increase value of reload by 1 per
}                                              //tick (60 ticks per second)

//Reset ammo
if reloadTimer &gt; 150                           //Check for value of timer
{
    ammo = 6                                   //Reset ammo count
    reloadTimer = 0                            //Reset timer
    reloading = 0                              //Declare that the player is not reloading
}

//Throw grenades
if keyboard_check_pressed(ord('E')) = true &amp;&amp; grenade &gt; 0
{
    if faceDirection = 0                       //Determine direction of grenade travel
    {
        with instance_create(x+32,y+32,obj_grenade)
        {                                      //Create a grenade and modify values
            speed = 5                          //Set speed of grenade to 5
            vspeed = -10                       //Set upwards vspeed of 10
            image_xscale = 1                   //Make the sprite face right
        }
    }
    if faceDirection = 180                     //Determine direction of grenade travel
    {
        with instance_create(x-32,y+32,obj_grenade)
        {                                      //Create a grenade and modify values
            speed = -5                         //Set speed of grenade to 5
            vspeed = -10                       //Set upwards vspeed of 10
            image_xscale = -1                  //Make the sprite face left
        }
    }
    grenade -= 1                               //Decrease amount of grenades by 1
}

//Start grenade timer
if grenade &lt; 4                                 //If player is missing grenades
{
    grenadeTimer += 1                          //Increase value of greande timer by 1
}                                              //per tick (60 ticks per second)

//Increase amount of grenades
if grenadeTimer &gt; 360                          //Check value of grenade timer
{
    grenade += 1                               //Increase amount of grenades by 1
    grenadeTimer = 0                           //Set value of grenade timer to 0
}

//Start teporarily invulnerability
if hit = 1                                     //If player was recently hit
{
    image_alpha = 0.5                          //Make them partially transparant
    hitDelay += 1                              //Increase timer for player to be hit
}                                              //again by 1 per tick

//Reset invulnerability
if hitDelay &gt; 40                               //Check value of hit timer
{
    hit = 0;                                   //Allow player to be hit again
    image_alpha = 1                            //Set player to normal
    hitDelay = 0                               //Set timer to 0
}

//Kill the player
if playerHealth &lt; 1                            //If player has no health
{
    instance_destroy()                         //Kill them
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boomerang">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hit = 0
{
    hit = 1
    playerHealth -= 1   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_floor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!place_meeting(x,y,obj_floor))
{
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
