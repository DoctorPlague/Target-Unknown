<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu = 1;
selectionMain = 1;
selectionLevel = 1;
selectionP1 = 1;
selectionP2 = 1;
delay = 0;
global.p1Skin = 1;
global.p2Skin = 1;
global.p1Banner = 1;
global.p2Banner = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_scoreboard)
{
    with (obj_scoreboard)
    {
        instance_destroy();
    }
}

if !instance_exists(obj_castle)
{
    instance_create(0,0,obj_castle)
}

if delay &lt; 40
{
    delay += 1
}

//control menu
if menu = 1
{
    if keyboard_check_pressed(vk_up) = true
    {
            selectionMain -= 1;
    }
    
    if keyboard_check_pressed(vk_down) = true
    {
            selectionMain += 1;
    }
}
else
{
    selectionMain = 1;
}

//loop menu
if menu = 1
{
    if selectionMain &gt; 4
    {
        selectionMain = 1;
    }
                    
    if selectionMain &lt; 1
    {
        selectionMain = 4;
    }
}

//confirm selection
if menu = 1
{
    if keyboard_check_pressed(vk_enter) = true
    {
        if delay &gt; 20
        {
            if selectionMain = 1
            {
                menu = 3;
                delay = 0;
            }
            
            if selectionMain = 2
            {
                menu = 5;
                delay = 0;
            }
            
            if selectionMain = 3
            {
                menu = 4;
                delay = 0;
            }
            if selectionMain = 4
            {
                game_end();
            }
        }
    }
} 

if menu = 2
{
    if delay &gt; 20
    {
        if keyboard_check_pressed(vk_left) = true
        {
            selectionLevel -= 1;
        }
        
        if keyboard_check_pressed(vk_right) = true
        {
            selectionLevel += 1;
        }
        if keyboard_check_pressed(vk_escape) = true
        {
            menu = 3;
            delay = 0;
        }
    }
}
else
{
    selectionLevel = 1;
}

if menu = 1
{
    if !instance_exists(obj_titleVersus)
    {
        instance_create(room_width/2,300,obj_titleVersus)
    }
    if !instance_exists(obj_titleControls)
    {
        instance_create(room_width/2,425,obj_titleControls)
    }
    if !instance_exists(obj_titleCredits)
    {
        instance_create(room_width/2,550,obj_titleCredits)
    }
    if !instance_exists(obj_titleExit)
    {
        instance_create(room_width/2,675,obj_titleExit)
    }
    if !instance_exists(obj_menuTitle)
    {
        instance_create(room_width/2,0,obj_menuTitle)
    }
}
else
{
    with (obj_titleVersus)
    {
        instance_destroy();
    }
    with (obj_titleControls)
    {
        instance_destroy();
    }
    with (obj_titleCredits)
    {
        instance_destroy();
    }
    with (obj_titleExit)
    {
        instance_destroy();
    }
    with (obj_menuTitle)
    {
        instance_destroy();
    }
}

if menu = 2
{
    if selectionLevel &gt; 4
    {
        selectionLevel = 1;
    }
                    
    if selectionLevel &lt; 1
    {
        selectionLevel = 4;
    }
}


if menu = 2
{ 
    if !instance_exists(obj_preview)
    {
        instance_create(0,0,obj_preview)
    }

    with(obj_preview)
    {
        image_speed = 0;
    }
    
    if selectionLevel = 1
    {
        with(obj_preview)
        {
            image_index = 0;
        }
    }
    if selectionLevel = 2
    {
        with(obj_preview)
        {
            image_index = 1;
        }
    }
    if selectionLevel = 3
    {
        with(obj_preview)
        {
            image_index = 2;
        }
    }
    if selectionLevel = 4
    {
        with(obj_preview)
        {
            image_index = 3;
        }
    }
    
    if keyboard_check_pressed(vk_enter) = true
    {
        if delay &gt; 20
        {
            if selectionLevel = 1
            {
                room_goto(rm_gameSummer)
                delay = 0;
                if !instance_exists(obj_scoreboard)
                {
                    instance_create(0,0,obj_scoreboard)
                }
            }
            if selectionLevel = 2
            {
                room_goto(rm_gameAutumn)
                delay = 0;
                if !instance_exists(obj_scoreboard)
                {
                    instance_create(0,0,obj_scoreboard)
                }
            }
            if selectionLevel = 3
            {
                room_goto(rm_gameWinter)
                delay = 0;
                if !instance_exists(obj_scoreboard)
                {
                    instance_create(0,0,obj_scoreboard)
                }
            }
            if selectionLevel = 4
            {
                room_goto(rm_gameSpring)
                delay = 0;
                if !instance_exists(obj_scoreboard)
                {
                    instance_create(0,0,obj_scoreboard)
                }
            }
        }
    }
}
if menu = 2
{
    if !instance_exists(obj_levelSelectLeft)
    {
        instance_create(0,0,obj_levelSelectLeft)
    }
    
    if !instance_exists(obj_levelSelectRight)
    {
        instance_create(1024,0,obj_levelSelectRight)
    }
    with (obj_castle)
    {
        instance_destroy();
    }
}
else
{
    with(obj_levelSelectLeft)
    {
        instance_destroy()
    }
    with(obj_levelSelectRight)
    {
        instance_destroy()
    }
}

if menu != 2
{
    with(obj_preview)
    {
        instance_destroy();
    }
}

if menu = 3
{
    if delay &gt; 20
    {
        if keyboard_check_pressed(ord('S'))
        {
            selectionP1 += 1;
        }
        if keyboard_check_pressed(ord('W'))
        {
            selectionP1 -= 1;
        }
        
        if keyboard_check_pressed(vk_down)
        {
            selectionP2 += 1;
        }
        
        if keyboard_check_pressed(vk_up)
        {
            selectionP2 -= 1;
        }
        
        if keyboard_check_pressed(vk_escape)
        {
            menu = 1;
            delay = 0;
        }
    }
}
else
{
    selectionP1 = 1;
    selectionP2 = 1;
}

if menu = 3
{
    if selectionP1 &gt; 4
    {
        selectionP1 = 1;
    }
                    
    if selectionP1 &lt; 1
    {
        selectionP1 = 4;
    }
    
    if selectionP2 &gt; 4
    {
        selectionP2 = 1;
    }
                    
    if selectionP2 &lt; 1
    {
        selectionP2 = 4;
    }
}

if menu = 3
{
    if keyboard_check_pressed(vk_enter) = true
    {
        if delay &gt; 20
        {
            if selectionP1 = 1
            {
                global.p1Skin = 1
                global.p1Banner = 1
                menu = 2
                delay = 0;
            }
            
            if selectionP1 = 2
            {
                global.p1Skin = 2
                global.p1Banner = 2
                menu = 2
                delay = 0;
            }
            
            if selectionP1 = 3
            {
                global.p1Skin = 3
                global.p1Banner = 3
                menu = 2
                delay = 0;
            }
            
            if selectionP1 = 4
            {
                global.p1Skin = 4
                global.p1Banner = 4
                menu = 2
                delay = 0;
            }
            
            if selectionP2 = 1
            {
                global.p2Skin = 2
                global.p2Banner = 2
                menu = 2
                delay = 0;
            }
            
            if selectionP2 = 2
            {
                global.p2Skin = 3
                global.p2Banner = 3
                menu = 2
                delay = 0;
            }
            
            if selectionP2 = 3
            {
                global.p2Skin = 4
                global.p2Banner = 4
                menu = 2
                delay = 0;
            }
            
            if selectionP2 = 4
            {
                global.p2Skin = 1
                global.p2Banner = 1
                menu = 2
                delay = 0;
            }
        }
    }
}

if menu = 3
{
    if !instance_exists(obj_titleSelectP1)
    {
        instance_create(room_width/5,384,obj_titleSelectP1)
    }
    
    if !instance_exists(obj_titleSelectP2)
    {
        instance_create(room_width/1.25,384,obj_titleSelectP2)
    }
}
else
{
    with(obj_titleSelectP1)
    {
        instance_destroy();
    }
    
    with(obj_titleSelectP2)
    {
        instance_destroy();
    }
}

if menu = 4
{
    if keyboard_check_pressed (vk_escape) = true
    {
        menu = 1
    }
}

if menu = 5
{
    if keyboard_check_pressed(vk_escape) = true
    {
        menu = 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if menu = 1
{
    if selectionMain = 1
    {
        with (obj_titleVersus)
        {
            image_index = 0
            image_xscale = 1.2
            image_yscale = 1.2
        }
    }
    else
    {
        with (obj_titleVersus)
        {
            image_index = 1
            image_xscale = 1
            image_yscale = 1
        }
    }
    
    if selectionMain = 2
    {
        with (obj_titleControls)
        {
            image_index = 0
            image_xscale = 1.2
            image_yscale = 1.2
        }
    }
    else
    {
        with (obj_titleControls)
        {
            image_index = 1
            image_xscale = 1
            image_yscale = 1
        }
    }
    
    if selectionMain = 3
    {
        with (obj_titleCredits)
        {
            image_index = 0
            image_xscale = 1.2
            image_yscale = 1.2
        }
    }
    else
    {
        with (obj_titleCredits)
        {
            image_index = 1
            image_xscale = 1
            image_yscale = 1
        }
    }
    
    if selectionMain = 4
    {
        with (obj_titleExit)
        {
            image_index = 0
            image_xscale = 1.2
            image_yscale = 1.2
        }
    }
    else
    {
        with (obj_titleExit)
        {
            image_index = 1
            image_xscale = 1
            image_yscale = 1
        }
    }
    
    
}

if menu = 3
{
    if selectionP1 = 1
    {
        with(obj_titleSelectP1)
        {
            image_index = 0
        }
    }
    
    if selectionP1 = 2
    {
        with(obj_titleSelectP1)
        {
            image_index = 1
        }
    }
    
    if selectionP1 = 3
    {
        with(obj_titleSelectP1)
        {
            image_index = 2
        }
    }
    if selectionP1 = 4
    {
        with(obj_titleSelectP1)
        {
            image_index = 3
        }
    }
    
    if selectionP2 = 1
    {
        with(obj_titleSelectP2)
        {
            image_index = 1
        }
    }
    
    if selectionP2 = 2
    {
        with(obj_titleSelectP2)
        {
            image_index = 2
        }
    }
    
    if selectionP2 = 3
    {
        with(obj_titleSelectP2)
        {
            image_index = 3
        }
    }
    if selectionP2 = 4
    {
        with(obj_titleSelectP2)
        {
            image_index = 0
        }
    }
}

if menu = 4
{
    if !instance_exists(obj_credits)
    {
        instance_create(0,0,obj_credits)
    }
}
else
{
    with (obj_credits)
    {
        instance_destroy();
    }
}

if menu = 5
{
    if !instance_exists(obj_controls)
    {
        instance_create(0,0,obj_controls)
    }
}
else
{
    with (obj_controls)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
